// MIT License
// Copyright (c) 2022 Gauthier FRANCOIS


- @runs.to_a.reverse.to_h.each do |run_name, status|
  - if %w(archived started).include?(status)
    .uk-heading-small.uk-heading-divider ="Run #{run_name}"
    table.uk-table.uk-table-striped
      tr
        th
          ="Competitor #"
        th
          ="Competitor name"
        th
          ="Competitor time"
      - competitors = @all_competitors.select { |k, v| v.key? run_name}
      - competitors_crashed = competitors.select { |k, v| v[run_name]['ts_time'] == 'crashed'}
      - competitors = competitors.reject { |k, v| v[run_name]['ts_time'].nil? || v[run_name]['ts_time'] == 'crashed'}
      - sorted_competitors = competitors.sort_by { |k, v| v[run_name]['ts_time']}.to_h
      - sorted_competitors.merge!(competitors_crashed)
      - sorted_competitors.each do |number, infos|
        -if infos[run_name]
          tr
            td
              ="##{number}"
            td
              =infos['name']
            td
              - if infos[run_name]['ts_time'] == 'crashed'
                = 'Crashed'
              - else
                - time = get_duration_hrs_and_mins(infos[run_name]['ts_time'])
                - if time.is_a? Hash
                  - min = "0#{time[:minutes]}".reverse[0,2].reverse
                  - sec = "0#{time[:seconds]}".reverse[0,2].reverse
                  - ms = "00#{time[:milliseconds]}".reverse[0,3].reverse
                  = "#{min}m:#{sec}s:#{ms}ms"
